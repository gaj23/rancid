{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/waffle/Desktop/turing/mod3/projects/rancid/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport Error from '../Error/Error';\nimport Movies from '../Movies/Movies';\nimport Film from '../Film/Film';\nimport apiCalls from '../../api-calls.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      isLoading: true,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    apiCalls.getAllMovies().then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        this.setState({\n          error: true,\n          isLoading: false\n        });\n      }\n    }).then(films => this.setState({\n      movies: films.movies,\n      isLoading: false\n    })).catch(() => this.setState({\n      isLoading: false,\n      error: true\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [this.state.isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"message\",\n          children: \"Please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 36\n        }, this), this.state.error && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(Movies, {\n            movies: this.state.movies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/film/:id\",\n          render: ({\n            match\n          }) => {\n            const myMovieID = match.params.id;\n            return /*#__PURE__*/_jsxDEV(Film, {\n              id: myMovieID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 22\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/waffle/Desktop/turing/mod3/projects/rancid/src/components/App/App.js"],"names":["React","Component","Route","Header","Error","Movies","Film","apiCalls","App","constructor","state","movies","isLoading","error","componentDidMount","getAllMovies","then","response","ok","json","setState","films","catch","render","match","myMovieID","params","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAC1BQ,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEAC,EAAAA,iBAAiB,GAAG;AACnBP,IAAAA,QAAQ,CAACQ,YAAT,GACGC,IADH,CACQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP;AAED,OAHD,MAGO;AACL,aAAKC,QAAL,CAAc;AAACP,UAAAA,KAAK,EAAE,IAAR;AAAcD,UAAAA,SAAS,EAAE;AAAzB,SAAd;AACD;AACF,KARH,EASGI,IATH,CASQK,KAAK,IAAI,KAAKD,QAAL,CAAc;AAACT,MAAAA,MAAM,EAAEU,KAAK,CAACV,MAAf;AAAuBC,MAAAA,SAAS,EAAE;AAAlC,KAAd,CATjB,EAUGU,KAVH,CAUS,MAAM,KAAKF,QAAL,CAAc;AAACR,MAAAA,SAAS,EAAE,KAAZ;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAAd,CAVf;AAWD;;AAGDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,mBACG,KAAKb,KAAL,CAAWE,SAAX,iBAAwB;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD3B,EAEG,KAAKF,KAAL,CAAWG,KAAX,iBAAoB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAFvB,eAWE,QAAC,KAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,IAAI,EAAC,GAFP;AAGE,UAAA,MAAM,EAAE,mBACN,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC;AAA3B;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAXF,eAoBE,QAAC,KAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,IAAI,EAAC,WAFP;AAGE,UAAA,MAAM,EAAE,CAAE;AAAEa,YAAAA;AAAF,WAAF,KAAiB;AACvB,kBAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAA/B;AACA,gCAAO,QAAC,IAAD;AAAM,cAAA,EAAE,EAAEF;AAAV;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AANH;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAkCD;;AA5DyB;;AA+D5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport Error from '../Error/Error';\nimport Movies from '../Movies/Movies';\nimport Film from '../Film/Film';\nimport apiCalls from '../../api-calls.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      isLoading: true,\n      error: false\n    }\n  }\n\n   componentDidMount() {\n    apiCalls.getAllMovies()\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n\n        } else {\n          this.setState({error: true, isLoading: false});\n        }\n      })\n      .then(films => this.setState({movies: films.movies, isLoading: false}))\n      .catch(() => this.setState({isLoading: false, error: true}))\n  }\n\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"App\">\n          {this.state.isLoading && <h2 className='message'>Please wait...</h2>}\n          {this.state.error && <Error />}\n          {/* ok so I couldn't figure out how to get error to be routed without it breaking everything\n          so I went ahead and just left it conditional\n\n          I've also changed the Film path back to just the id\n\n          I think for MVP we just don't route Error\n          */}\n\n          <Route\n            exact\n            path='/'\n            render={() =>\n              <Movies movies={this.state.movies} />\n            }\n          />\n\n\n          <Route\n            exact\n            path='/film/:id'\n            render={( { match } ) => {\n              const myMovieID = match.params.id;\n              return <Film id={myMovieID}/>\n            } }\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}