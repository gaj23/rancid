{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/waffle/Desktop/turing/mod3/projects/rancid/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport Error from '../Error/Error';\nimport Movies from '../Movies/Movies';\nimport Film from '../Film/Film';\nimport apiCalls from '../../api-calls.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.isResponseOk = response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        this.setState({\n          error: true,\n          isLoading: false\n        });\n      }\n    };\n\n    this.state = {\n      movies: [],\n      isLoading: true,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    apiCalls.getAllMovies().then(response => this.isResponseOk(response)).then(films => this.setState({\n      movies: films.movies,\n      isLoading: false\n    })).catch(() => this.setState({\n      isLoading: false,\n      error: true\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [this.state.isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"message\",\n          children: \"Please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => {\n            if (!this.state.error) {\n              return /*#__PURE__*/_jsxDEV(Movies, {\n                movies: this.state.movies\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 26\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(Redirect, {\n                to: \"/error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 26\n              }, this);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/film/:id\",\n          render: ({\n            match\n          }) => {\n            const myMovieID = match.params.id;\n            return /*#__PURE__*/_jsxDEV(Film, {\n              id: myMovieID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 22\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/error\",\n          render: () => /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/waffle/Desktop/turing/mod3/projects/rancid/src/components/App/App.js"],"names":["React","Component","Route","Redirect","Header","Error","Movies","Film","apiCalls","App","constructor","isResponseOk","response","ok","json","setState","error","isLoading","state","movies","componentDidMount","getAllMovies","then","films","catch","render","match","myMovieID","params","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport Error from '../Error/Error';\nimport Movies from '../Movies/Movies';\nimport Film from '../Film/Film';\nimport apiCalls from '../../api-calls.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      isLoading: true,\n      error: false\n    }\n  }\n\n   componentDidMount() {\n    apiCalls.getAllMovies()\n      .then(response => this.isResponseOk(response))\n      .then(films => this.setState({movies: films.movies, isLoading: false}))\n      .catch(() => this.setState({isLoading: false, error: true}))\n  }\n\n  isResponseOk = (response) => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      this.setState({error: true, isLoading: false});\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"App\">\n          {this.state.isLoading && <h2 className='message'>Please wait...</h2>}\n\n          <Route\n            exact\n            path='/'\n            render={() => {\n                if(!this.state.error){\n                  return <Movies movies={this.state.movies} />\n                } else {\n                  return <Redirect to='/error' />\n                }\n              }\n            }\n          />\n\n          <Route\n            exact\n            path='/film/:id'\n            render={( { match } ) => {\n              const myMovieID = match.params.id;\n              return <Film id={myMovieID}/>\n            } }\n          />\n\n          <Route\n            exact\n            path='/error'\n            render={() => <Error />}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}