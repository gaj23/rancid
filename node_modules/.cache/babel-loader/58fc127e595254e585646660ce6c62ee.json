{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/waffle/Desktop/turing/mod3/projects/rancid/src/components/Film/Film.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport apiCalls from './../../api-calls';\nimport './Film.css';\n\nclass Film extends Component {\n  constructor() {\n    super();\n\n    this.checkForError = film => {\n      if (film.error) {\n        this.setState({\n          error: true,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          currentMovie: film.movie,\n          isLoading: false\n        });\n      }\n    };\n\n    this.getGenres = () => {\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"genre-display\",\n        children: this.state.currentMovie.genres.join(', ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.formatMoney = money => {\n      const name = money.charAt(0).toUpperCase() + money.slice(1);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: `${name}:`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: `${this.getNumberAmount(money)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.getNumberAmount = amount => {\n      const number = this.state.currentMovie[amount];\n      const numLength = parseInt(number).toString().length;\n\n      if (numLength > 3 && numLength < 7) {\n        const newNum = parseFloat((number / 1000).toFixed(1));\n        return `$${newNum}k`;\n      } else if (numLength > 6 && numLength < 10) {\n        const newNum = parseFloat((number / 1000000).toFixed(1));\n        return `$${newNum}mil`;\n      } else if (numLength > 9) {\n        const newNum = parseFloat((number / 1000000000).toFixed(1));\n        return `$${newNum}bil`;\n      } else {\n        return `$${parseInt(number)}`;\n      }\n    };\n\n    this.formatDate = () => {\n      const newDate = new Date(this.state.currentMovie.release_date).toDateString();\n      const dateWithoutDay = newDate.split(' ').slice(1);\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: dateWithoutDay.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.formatRating = () => {\n      const rating = this.state.currentMovie.average_rating;\n      const formattedRating = parseFloat(rating.toFixed(1));\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"rating\",\n        children: `ðŸª¥${formattedRating}/10`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.state = {\n      currentMovie: {},\n      isLoading: true,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    console.log('film renders');\n    apiCalls.getOneMovie(this.props.id).then(film => this.checkForError(film)).catch(() => this.setState({\n      isLoading: false,\n      error: true\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Looking for your movie...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 32\n      }, this), this.state.error && /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 28\n      }, this), !this.state.isLoading && !this.state.error && /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"single-film\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"film-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"film-title-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"title\",\n              children: this.state.currentMovie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), this.state.currentMovie.average_rating && this.formatRating()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: this.state.currentMovie.tagline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: `${this.state.currentMovie.runtime} min`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), this.state.currentMovie.genres && this.getGenres(), this.formatDate()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.currentMovie.poster_path,\n          alt: this.state.currentMovie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"overview\",\n          children: [/*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"summary\",\n            \"aria-label\": \"summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"summary-headline\",\n              children: \"Summary:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.state.currentMovie.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"money-container\",\n            children: [this.state.currentMovie.budget > 0 && this.formatMoney('budget'), this.state.currentMovie.revenue > 0 && this.formatMoney('revenue')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Film;","map":{"version":3,"sources":["/Users/waffle/Desktop/turing/mod3/projects/rancid/src/components/Film/Film.js"],"names":["React","Component","Redirect","apiCalls","Film","constructor","checkForError","film","error","setState","isLoading","currentMovie","movie","getGenres","state","genres","join","formatMoney","money","name","charAt","toUpperCase","slice","getNumberAmount","amount","number","numLength","parseInt","toString","length","newNum","parseFloat","toFixed","formatDate","newDate","Date","release_date","toDateString","dateWithoutDay","split","formatRating","rating","average_rating","formattedRating","componentDidMount","console","log","getOneMovie","props","id","then","catch","render","title","tagline","runtime","poster_path","overview","budget","revenue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport apiCalls from './../../api-calls';\nimport './Film.css';\n\nclass Film extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentMovie: {},\n      isLoading: true,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    console.log('film renders');\n    apiCalls.getOneMovie(this.props.id)\n      .then(film => this.checkForError(film))\n      .catch(() => this.setState({isLoading: false, error: true }));\n  }\n\n  checkForError = film => {\n    if(film.error) {\n      this.setState({error: true, isLoading: false})\n    } else {\n      this.setState({currentMovie: film.movie, isLoading: false})\n    }\n  }\n\n  getGenres = () => {\n    return <h4 className='genre-display'>{this.state.currentMovie.genres.join(', ')}</h4>\n  }\n\n  formatMoney = money => {\n    const name = money.charAt(0).toUpperCase() + money.slice(1);\n\n    return (\n      <>\n        <h4>{`${name}:`}</h4>\n        <h5>{`${this.getNumberAmount(money)}`}</h5>\n      </>\n    )\n  }\n\n  getNumberAmount = amount => {\n    const number = this.state.currentMovie[amount];\n    const numLength = parseInt(number).toString().length;\n\n    if(numLength > 3 && numLength < 7) {\n      const newNum = parseFloat((number/1000).toFixed(1));\n      return `$${newNum}k`;\n\n    } else if (numLength > 6 && numLength < 10) {\n      const newNum = parseFloat((number/1000000).toFixed(1));\n      return `$${newNum}mil`;\n\n    } else if (numLength > 9) {\n      const newNum = parseFloat((number/1000000000).toFixed(1));\n      return `$${newNum}bil`;\n\n    } else {\n      return `$${parseInt(number)}`\n    }\n  }\n\n  formatDate = () => {\n    const newDate = new Date(this.state.currentMovie.release_date).toDateString();\n    const dateWithoutDay = newDate.split(' ').slice(1);\n\n    return <h4>{dateWithoutDay.join(' ')}</h4>\n  }\n\n  formatRating = () => {\n    const rating = this.state.currentMovie.average_rating;\n    const formattedRating = parseFloat(rating.toFixed(1));\n\n    return <h3 className='rating'>{`ðŸª¥${formattedRating}/10`}</h3>;\n  }\n\n  render() {\n    return (\n      <>\n      {this.state.isLoading && <h2>Looking for your movie...</h2>}\n\n      {this.state.error && <Redirect to='/error' />}\n\n      {!this.state.isLoading && !this.state.error &&\n        <article className='single-film'>\n          <section className='film-details'>\n            <div className='film-title-container'>\n              <h2 className='title'>{this.state.currentMovie.title}</h2>\n              {this.state.currentMovie.average_rating && this.formatRating()}\n            </div>\n            <h3>{this.state.currentMovie.tagline}</h3>\n            <div className='info-container'>\n              <h4>{`${this.state.currentMovie.runtime} min`}</h4>\n              {this.state.currentMovie.genres && this.getGenres()}\n              {this.formatDate()}\n            </div>\n          </section>\n          <img src={this.state.currentMovie.poster_path} alt={this.state.currentMovie.title} />\n          <section className='overview'>\n            <article className='summary' aria-label='summary'>\n              <h3 className='summary-headline'>Summary:</h3>\n              <p>{this.state.currentMovie.overview}</p>\n            </article>\n            <div className='money-container'>\n              {this.state.currentMovie.budget > 0 && this.formatMoney('budget')}\n              {this.state.currentMovie.revenue > 0 && this.formatMoney('revenue')}\n            </div>\n          </section>\n        </article>\n      }\n      </>\n    )\n  }\n}\n\nexport default Film;\n"]},"metadata":{},"sourceType":"module"}