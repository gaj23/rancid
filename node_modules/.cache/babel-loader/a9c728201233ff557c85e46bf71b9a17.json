{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/waffle/Desktop/turing/mod3/projects/rancid/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport Error from '../Error/Error';\nimport Movies from '../Movies/Movies';\nimport Film from '../Film/Film';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.checkForError = films => {\n      if (films.error) {\n        this.setState({\n          error: true,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          movies: films.movies,\n          isLoading: false\n        });\n      }\n    };\n\n    this.goHome = () => {\n      this.setState({\n        currentMovie: '',\n        isHome: true\n      });\n    };\n\n    this.state = {\n      movies: [],\n      isHome: true,\n      isLoading: true,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies/').then(response => response.json()).then(films => this.checkForError(films)).catch(error => this.setState({\n      isLoading: false,\n      error: true\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [this.state.isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"message\",\n          children: \"Please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 36\n        }, this), \"//add path for error\", this.state.error && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(Movies, {\n            movies: this.state.movies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/:id\",\n          render: ({\n            match\n          }) => {\n            const myMovieID = match.params.id;\n            return /*#__PURE__*/_jsxDEV(Film, {\n              id: myMovieID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 22\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/waffle/Desktop/turing/mod3/projects/rancid/src/components/App/App.js"],"names":["React","Component","Route","NavLink","Header","Error","Movies","Film","App","constructor","checkForError","films","error","setState","isLoading","movies","goHome","currentMovie","isHome","state","componentDidMount","fetch","then","response","json","catch","render","match","myMovieID","params","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,kBAA/B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAC1BQ,EAAAA,WAAW,GAAG;AACZ;;AADY,SAiBdC,aAjBc,GAiBEC,KAAK,IAAI;AACvB,UAAGA,KAAK,CAACC,KAAT,EAAgB;AACd,aAAKC,QAAL,CAAc;AAACD,UAAAA,KAAK,EAAE,IAAR;AAAcE,UAAAA,SAAS,EAAE;AAAzB,SAAd;AACD,OAFD,MAEO;AACL,aAAKD,QAAL,CAAc;AAACE,UAAAA,MAAM,EAAEJ,KAAK,CAACI,MAAf;AAAuBD,UAAAA,SAAS,EAAE;AAAlC,SAAd;AACD;AACF,KAvBa;;AAAA,SAyBdE,MAzBc,GAyBL,MAAM;AACb,WAAKH,QAAL,CAAc;AAAEI,QAAAA,YAAY,EAAE,EAAhB;AAAoBC,QAAAA,MAAM,EAAE;AAA5B,OAAd;AACD,KA3Ba;;AAEZ,SAAKC,KAAL,GAAa;AACXJ,MAAAA,MAAM,EAAE,EADG;AAEXG,MAAAA,MAAM,EAAE,IAFG;AAGXJ,MAAAA,SAAS,EAAE,IAHA;AAIXF,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,wDAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQX,KAAK,IAAI,KAAKD,aAAL,CAAmBC,KAAnB,CAFjB,EAGGc,KAHH,CAGSb,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACC,MAAAA,SAAS,EAAC,KAAX;AAAkBF,MAAAA,KAAK,EAAE;AAAzB,KAAd,CAHlB;AAID;;AAcDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BAEE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,mBACG,KAAKP,KAAL,CAAWL,SAAX,iBAAwB;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD3B,0BAGG,KAAKK,KAAL,CAAWP,KAAX,iBAAoB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAHvB,eAIE,QAAC,KAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,IAAI,EAAC,GAFP;AAGE,UAAA,MAAM,EAAE,mBACN,QAAC,MAAD;AACE,YAAA,MAAM,EAAE,KAAKO,KAAL,CAAWJ;AADrB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAJF,eAcE,QAAC,KAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,MAAM,EAAE,CAAE;AAAEY,YAAAA;AAAF,WAAF,KAAiB;AACvB,kBAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAA/B;AACA,gCAAO,QAAC,IAAD;AAAM,cAAA,EAAE,EAAEF;AAAV;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AANH;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBADF;AA8BD;;AA7DyB;;AAgE5B,eAAepB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport Error from '../Error/Error';\nimport Movies from '../Movies/Movies';\nimport Film from '../Film/Film';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      isHome: true,\n      isLoading: true,\n      error: false\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies/')\n      .then(response => response.json())\n      .then(films => this.checkForError(films))\n      .catch(error => this.setState({isLoading:false, error: true}))\n  }\n\n  checkForError = films => {\n    if(films.error) {\n      this.setState({error: true, isLoading: false})\n    } else {\n      this.setState({movies: films.movies, isLoading: false})\n    }\n  }\n\n  goHome = () => {\n    this.setState({ currentMovie: '', isHome: true})\n  }\n\n  render() {\n    return (\n      <>\n\n        <Header to='/'/>\n        <div className=\"App\">\n          {this.state.isLoading && <h2 className='message'>Please wait...</h2>}\n          //add path for error\n          {this.state.error && <Error />}\n          <Route\n            exact\n            path='/'\n            render={() =>\n              <Movies\n                movies={this.state.movies}\n              />\n            }\n          />\n\n          <Route\n            exact\n            path='/:id'\n            render={( { match } ) => {\n              const myMovieID = match.params.id;\n              return <Film id={myMovieID}/>\n            }\n          }\n         />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}