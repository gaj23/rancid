{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/waffle/Desktop/turing/mod3/projects/rancid/src/components/Film/Film.js\";\nimport React, { Component } from 'react';\nimport './Film.css';\n\nclass Film extends Component {\n  constructor() {\n    super();\n\n    this.getGenres = () => {\n      const genres = this.state.genres.map(genre => genre.name);\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: genres.join(', ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.formatMoney = money => {\n      const amount = this.state[money];\n      const splitAmount = amount.toString().split('').reverse();\n      const commas = splitAmount.map((number, i) => {\n        if (i % 3 === 0 && i !== 0) {\n          return number + ',';\n        } else {\n          return number;\n        }\n      });\n      const formattedAmount = commas.reverse().join('');\n      const name = money.charAt(0).toUpperCase() + money.slice(1);\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: `${name}: $${formattedAmount}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.formatDate = () => {\n      const newDate = new Date(this.state.release_date).toDateString();\n      const dateWithoutDay = newDate.split(' ').slice(1);\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: dateWithoutDay.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.state = {\n      id: 1,\n      title: \"Fake Movie Title\",\n      poster_path: \"https://image.tmdb.org/t/p/original//7G2VvG1lU8q758uOqU6z2Ds0qpA.jpg\",\n      backdrop_path: \"https://image.tmdb.org/t/p/original//oazPqs1z78LcIOFslbKtJLGlueo.jpg\",\n      release_date: \"2019-12-04\",\n      overview: \"Some overview that is full of buzzwords to attempt to entice you to watch this movie! Explosions! Drama! True love! Robots! A cute dog!\",\n      average_rating: 6,\n      genres: [{\n        id: 18,\n        name: \"Drama\"\n      }],\n      // genres: [{id: 18, name:\"Drama\"}, {id: 18, name:\"Drama\"}, {id: 18, name:\"Drama\"}],\n      // // getGenres() outcomes can be tested by commenting line 15 and uncommenting line 16\n      // genres: '',\n      // // conditional rendering for gerGenres() at line 73 can be tested by\n      // // commenting lines 15 and 16 and uncommenting line 19\n      budget: 63000000,\n      revenue: 100853753,\n      // conditional rendering of budget and revenue at lines 84 and 85\n      // can be tested by commenting lines 23 and 24\n      runtime: 139,\n      tagline: \"It's a movie!\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"single-film\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"film-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"film-title-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: this.state.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"rating\",\n            children: `${this.state.average_rating}/10`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.tagline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: `${this.state.runtime} min`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), this.state.genres && this.getGenres(), this.formatDate()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.poster_path,\n        alt: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"overview\",\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"summary\",\n          \"aria-label\": \"summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Summary:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"money-container\",\n          children: [this.state.budget > 0 && this.formatMoney('budget'), this.state.revenue > 0 && this.formatMoney('revenue')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Film;","map":{"version":3,"sources":["/Users/waffle/Desktop/turing/mod3/projects/rancid/src/components/Film/Film.js"],"names":["React","Component","Film","constructor","getGenres","genres","state","map","genre","name","join","formatMoney","money","amount","splitAmount","toString","split","reverse","commas","number","i","formattedAmount","charAt","toUpperCase","slice","formatDate","newDate","Date","release_date","toDateString","dateWithoutDay","id","title","poster_path","backdrop_path","overview","average_rating","budget","revenue","runtime","tagline","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Film.css';\n\nclass Film extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 1,\n      title: \"Fake Movie Title\",\n      poster_path: \"https://image.tmdb.org/t/p/original//7G2VvG1lU8q758uOqU6z2Ds0qpA.jpg\",\n      backdrop_path: \"https://image.tmdb.org/t/p/original//oazPqs1z78LcIOFslbKtJLGlueo.jpg\",\n      release_date: \"2019-12-04\",\n      overview: \"Some overview that is full of buzzwords to attempt to entice you to watch this movie! Explosions! Drama! True love! Robots! A cute dog!\",\n      average_rating: 6,\n      genres: [{id: 18, name:\"Drama\"}],\n      // genres: [{id: 18, name:\"Drama\"}, {id: 18, name:\"Drama\"}, {id: 18, name:\"Drama\"}],\n      // // getGenres() outcomes can be tested by commenting line 15 and uncommenting line 16\n\n      // genres: '',\n      // // conditional rendering for gerGenres() at line 73 can be tested by\n      // // commenting lines 15 and 16 and uncommenting line 19\n\n      budget:63000000,\n      revenue:100853753,\n      // conditional rendering of budget and revenue at lines 84 and 85\n      // can be tested by commenting lines 23 and 24\n      runtime:139,\n      tagline: \"It's a movie!\"\n    }\n  }\n\n  getGenres = () => {\n    const genres = this.state.genres.map(genre => genre.name);\n\n    return <h4>{genres.join(', ')}</h4>\n  }\n//is there a way to adjust so that the genres stay on one line rather than getting crunched together?\n\n\n  formatMoney = (money) => {\n    const amount = this.state[money];\n    const splitAmount = amount.toString().split('').reverse();\n    const commas = splitAmount.map((number, i) => {\n      if (i % 3 === 0 && i !== 0) {\n        return number + ',';\n      } else {\n        return number;\n      }\n    });\n    const formattedAmount = commas.reverse().join('');\n\n    const name = money.charAt(0).toUpperCase() + money.slice(1);\n\n    return <h4>{`${name}: $${formattedAmount}`}</h4>\n  }\n\n  formatDate = () => {\n    const newDate = new Date(this.state.release_date).toDateString();\n    const dateWithoutDay = newDate.split(' ').slice(1);\n\n    return <h4>{dateWithoutDay.join(' ')}</h4>\n  }\n\n  render() {\n    return (\n      <article className='single-film'>\n        <section className='film-details'>\n          <div className='film-title-container'>\n            <h2 className='title'>{this.state.title}</h2>\n            <h3 className='rating'>{`${this.state.average_rating}/10`}</h3>\n          </div>\n          <h3>{this.state.tagline}</h3>\n          <div className='info-container'>\n            <h4>{`${this.state.runtime} min`}</h4>\n            {this.state.genres && this.getGenres()}\n            {this.formatDate()}\n          </div>\n        </section>\n        <img src={this.state.poster_path} alt={this.state.title} />\n        <section className='overview'>\n          <article className='summary' aria-label='summary'>\n            <h3>Summary:</h3>\n            <p>{this.state.overview}</p>\n          </article>\n          <div className='money-container'>\n            {this.state.budget > 0 && this.formatMoney('budget')}\n            {this.state.revenue > 0 && this.formatMoney('revenue')}\n          </div>\n        </section>\n        </article>\n    )\n  }\n}\n\nexport default Film;\n"]},"metadata":{},"sourceType":"module"}